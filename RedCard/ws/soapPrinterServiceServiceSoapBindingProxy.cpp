/* soapPrinterServiceServiceSoapBindingProxy.cpp
   Generated by gSOAP 2.8.15 from wpsoap.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#include "soapPrinterServiceServiceSoapBindingProxy.h"

PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy()
{	PrinterServiceServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy(const struct soap &_soap) : soap(_soap)
{ }

PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy(const char *url)
{	PrinterServiceServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
	soap_endpoint = url;
}

PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy(soap_mode iomode)
{	PrinterServiceServiceSoapBindingProxy_init(iomode, iomode);
}

PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy(const char *url, soap_mode iomode)
{	PrinterServiceServiceSoapBindingProxy_init(iomode, iomode);
	soap_endpoint = url;
}

PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy(soap_mode imode, soap_mode omode)
{	PrinterServiceServiceSoapBindingProxy_init(imode, omode);
}

PrinterServiceServiceSoapBindingProxy::~PrinterServiceServiceSoapBindingProxy()
{ }

void PrinterServiceServiceSoapBindingProxy::PrinterServiceServiceSoapBindingProxy_init(soap_mode imode, soap_mode omode)
{	soap_imode(this, imode);
	soap_omode(this, omode);
	soap_endpoint = NULL;
	static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"ns1", "http://service.ws.redcard.com/", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};
	soap_set_namespaces(this, namespaces);
}

void PrinterServiceServiceSoapBindingProxy::destroy()
{	soap_destroy(this);
	soap_end(this);
}

void PrinterServiceServiceSoapBindingProxy::reset()
{	destroy();
	soap_done(this);
	soap_init(this);
	PrinterServiceServiceSoapBindingProxy_init(SOAP_IO_DEFAULT, SOAP_IO_DEFAULT);
}

void PrinterServiceServiceSoapBindingProxy::soap_noheader()
{	this->header = NULL;
}

const SOAP_ENV__Header *PrinterServiceServiceSoapBindingProxy::soap_header()
{	return this->header;
}

const SOAP_ENV__Fault *PrinterServiceServiceSoapBindingProxy::soap_fault()
{	return this->fault;
}

const char *PrinterServiceServiceSoapBindingProxy::soap_fault_string()
{	return *soap_faultstring(this);
}

const char *PrinterServiceServiceSoapBindingProxy::soap_fault_detail()
{	return *soap_faultdetail(this);
}

int PrinterServiceServiceSoapBindingProxy::soap_close_socket()
{	return soap_closesock(this);
}

int PrinterServiceServiceSoapBindingProxy::soap_force_close_socket()
{	return soap_force_closesock(this);
}

void PrinterServiceServiceSoapBindingProxy::soap_print_fault(FILE *fd)
{	::soap_print_fault(this, fd);
}

#ifndef WITH_LEAN
#ifndef WITH_COMPAT
void PrinterServiceServiceSoapBindingProxy::soap_stream_fault(std::ostream& os)
{	::soap_stream_fault(this, os);
}
#endif

char *PrinterServiceServiceSoapBindingProxy::soap_sprint_fault(char *buf, size_t len)
{	return ::soap_sprint_fault(this, buf, len);
}
#endif

int PrinterServiceServiceSoapBindingProxy::verifyUser(const char *endpoint, const char *soap_action, ns1__verifyUser *ns1__verifyUser_, ns1__verifyUserResponse *ns1__verifyUserResponse_)
{	struct soap *soap = this;
	struct __ns1__verifyUser soap_tmp___ns1__verifyUser;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__verifyUser.ns1__verifyUser_ = ns1__verifyUser_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__verifyUser(soap, &soap_tmp___ns1__verifyUser);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__verifyUser(soap, &soap_tmp___ns1__verifyUser, "-ns1:verifyUser", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__verifyUser(soap, &soap_tmp___ns1__verifyUser, "-ns1:verifyUser", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__verifyUserResponse_)
		return soap_closesock(soap);
	ns1__verifyUserResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__verifyUserResponse_->soap_get(soap, "ns1:verifyUserResponse", "ns1:verifyUserResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PrinterServiceServiceSoapBindingProxy::generatePsamCardNo(const char *endpoint, const char *soap_action, ns1__generatePsamCardNo *ns1__generatePsamCardNo_, ns1__generatePsamCardNoResponse *ns1__generatePsamCardNoResponse_)
{	struct soap *soap = this;
	struct __ns1__generatePsamCardNo soap_tmp___ns1__generatePsamCardNo;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__generatePsamCardNo.ns1__generatePsamCardNo_ = ns1__generatePsamCardNo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__generatePsamCardNo(soap, &soap_tmp___ns1__generatePsamCardNo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__generatePsamCardNo(soap, &soap_tmp___ns1__generatePsamCardNo, "-ns1:generatePsamCardNo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__generatePsamCardNo(soap, &soap_tmp___ns1__generatePsamCardNo, "-ns1:generatePsamCardNo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__generatePsamCardNoResponse_)
		return soap_closesock(soap);
	ns1__generatePsamCardNoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__generatePsamCardNoResponse_->soap_get(soap, "ns1:generatePsamCardNoResponse", "ns1:generatePsamCardNoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PrinterServiceServiceSoapBindingProxy::storePsamCard(const char *endpoint, const char *soap_action, ns1__storePsamCard *ns1__storePsamCard_, ns1__storePsamCardResponse *ns1__storePsamCardResponse_)
{	struct soap *soap = this;
	struct __ns1__storePsamCard soap_tmp___ns1__storePsamCard;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__storePsamCard.ns1__storePsamCard_ = ns1__storePsamCard_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__storePsamCard(soap, &soap_tmp___ns1__storePsamCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__storePsamCard(soap, &soap_tmp___ns1__storePsamCard, "-ns1:storePsamCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__storePsamCard(soap, &soap_tmp___ns1__storePsamCard, "-ns1:storePsamCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__storePsamCardResponse_)
		return soap_closesock(soap);
	ns1__storePsamCardResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__storePsamCardResponse_->soap_get(soap, "ns1:storePsamCardResponse", "ns1:storePsamCardResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PrinterServiceServiceSoapBindingProxy::generatePassword(const char *endpoint, const char *soap_action, ns1__generatePassword *ns1__generatePassword_, ns1__generatePasswordResponse *ns1__generatePasswordResponse_)
{	struct soap *soap = this;
	struct __ns1__generatePassword soap_tmp___ns1__generatePassword;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__generatePassword.ns1__generatePassword_ = ns1__generatePassword_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__generatePassword(soap, &soap_tmp___ns1__generatePassword);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__generatePassword(soap, &soap_tmp___ns1__generatePassword, "-ns1:generatePassword", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__generatePassword(soap, &soap_tmp___ns1__generatePassword, "-ns1:generatePassword", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__generatePasswordResponse_)
		return soap_closesock(soap);
	ns1__generatePasswordResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__generatePasswordResponse_->soap_get(soap, "ns1:generatePasswordResponse", "ns1:generatePasswordResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PrinterServiceServiceSoapBindingProxy::storeCard(const char *endpoint, const char *soap_action, ns1__storeCard *ns1__storeCard_, ns1__storeCardResponse *ns1__storeCardResponse_)
{	struct soap *soap = this;
	struct __ns1__storeCard soap_tmp___ns1__storeCard;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__storeCard.ns1__storeCard_ = ns1__storeCard_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__storeCard(soap, &soap_tmp___ns1__storeCard);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__storeCard(soap, &soap_tmp___ns1__storeCard, "-ns1:storeCard", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__storeCard(soap, &soap_tmp___ns1__storeCard, "-ns1:storeCard", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__storeCardResponse_)
		return soap_closesock(soap);
	ns1__storeCardResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__storeCardResponse_->soap_get(soap, "ns1:storeCardResponse", "ns1:storeCardResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PrinterServiceServiceSoapBindingProxy::getCardTypeRules(const char *endpoint, const char *soap_action, ns1__getCardTypeRules *ns1__getCardTypeRules_, ns1__getCardTypeRulesResponse *ns1__getCardTypeRulesResponse_)
{	struct soap *soap = this;
	struct __ns1__getCardTypeRules soap_tmp___ns1__getCardTypeRules;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCardTypeRules.ns1__getCardTypeRules_ = ns1__getCardTypeRules_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCardTypeRules(soap, &soap_tmp___ns1__getCardTypeRules);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCardTypeRules(soap, &soap_tmp___ns1__getCardTypeRules, "-ns1:getCardTypeRules", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCardTypeRules(soap, &soap_tmp___ns1__getCardTypeRules, "-ns1:getCardTypeRules", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getCardTypeRulesResponse_)
		return soap_closesock(soap);
	ns1__getCardTypeRulesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getCardTypeRulesResponse_->soap_get(soap, "ns1:getCardTypeRulesResponse", "ns1:getCardTypeRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

int PrinterServiceServiceSoapBindingProxy::getMainKey(const char *endpoint, const char *soap_action, ns1__getMainKey *ns1__getMainKey_, ns1__getMainKeyResponse *ns1__getMainKeyResponse_)
{	struct soap *soap = this;
	struct __ns1__getMainKey soap_tmp___ns1__getMainKey;
	if (endpoint)
		soap_endpoint = endpoint;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://127.0.0.1:8080/services/printerService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMainKey.ns1__getMainKey_ = ns1__getMainKey_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMainKey(soap, &soap_tmp___ns1__getMainKey);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMainKey(soap, &soap_tmp___ns1__getMainKey, "-ns1:getMainKey", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_url(soap, soap_endpoint, NULL), soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMainKey(soap, &soap_tmp___ns1__getMainKey, "-ns1:getMainKey", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getMainKeyResponse_)
		return soap_closesock(soap);
	ns1__getMainKeyResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getMainKeyResponse_->soap_get(soap, "ns1:getMainKeyResponse", "ns1:getMainKeyResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}
/* End of client proxy code */
