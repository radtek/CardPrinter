/* soapPrinterServiceServiceSoapBindingProxy.h
   Generated by gSOAP 2.8.15 from wpsoap.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapPrinterServiceServiceSoapBindingProxy_H
#define soapPrinterServiceServiceSoapBindingProxy_H
#include "soapH.h"

class SOAP_CMAC PrinterServiceServiceSoapBindingProxy : public soap
{ public:
	/// Endpoint URL of service 'PrinterServiceServiceSoapBindingProxy' (change as needed)
	const char *soap_endpoint;
	/// Constructor
	PrinterServiceServiceSoapBindingProxy();
	/// Construct from another engine state
	PrinterServiceServiceSoapBindingProxy(const struct soap&);
	/// Constructor with endpoint URL
	PrinterServiceServiceSoapBindingProxy(const char *url);
	/// Constructor with engine input+output mode control
	PrinterServiceServiceSoapBindingProxy(soap_mode iomode);
	/// Constructor with URL and input+output mode control
	PrinterServiceServiceSoapBindingProxy(const char *url, soap_mode iomode);
	/// Constructor with engine input and output mode control
	PrinterServiceServiceSoapBindingProxy(soap_mode imode, soap_mode omode);
	/// Destructor frees deserialized data
	virtual	~PrinterServiceServiceSoapBindingProxy();
	/// Initializer used by constructors
	virtual	void PrinterServiceServiceSoapBindingProxy_init(soap_mode imode, soap_mode omode);
	/// Delete all deserialized data (with soap_destroy and soap_end)
	virtual	void destroy();
	/// Delete all deserialized data and reset to default
	virtual	void reset();
	/// Disables and removes SOAP Header from message
	virtual	void soap_noheader();
	/// Get SOAP Header structure (NULL when absent)
	virtual	const SOAP_ENV__Header *soap_header();
	/// Get SOAP Fault structure (NULL when absent)
	virtual	const SOAP_ENV__Fault *soap_fault();
	/// Get SOAP Fault string (NULL when absent)
	virtual	const char *soap_fault_string();
	/// Get SOAP Fault detail as string (NULL when absent)
	virtual	const char *soap_fault_detail();
	/// Close connection (normally automatic, except for send_X ops)
	virtual	int soap_close_socket();
	/// Force close connection (can kill a thread blocked on IO)
	virtual	int soap_force_close_socket();
	/// Print fault
	virtual	void soap_print_fault(FILE*);
#ifndef WITH_LEAN
	/// Print fault to stream
#ifndef WITH_COMPAT
	virtual	void soap_stream_fault(std::ostream&);
#endif

	/// Put fault into buffer
	virtual	char *soap_sprint_fault(char *buf, size_t len);
#endif

	/// Web service operation 'verifyUser' (returns error code or SOAP_OK)
	virtual	int verifyUser(ns1__verifyUser *ns1__verifyUser_, ns1__verifyUserResponse *ns1__verifyUserResponse_) { return this->verifyUser(NULL, NULL, ns1__verifyUser_, ns1__verifyUserResponse_); }
	virtual	int verifyUser(const char *endpoint, const char *soap_action, ns1__verifyUser *ns1__verifyUser_, ns1__verifyUserResponse *ns1__verifyUserResponse_);

	/// Web service operation 'generatePsamCardNo' (returns error code or SOAP_OK)
	virtual	int generatePsamCardNo(ns1__generatePsamCardNo *ns1__generatePsamCardNo_, ns1__generatePsamCardNoResponse *ns1__generatePsamCardNoResponse_) { return this->generatePsamCardNo(NULL, NULL, ns1__generatePsamCardNo_, ns1__generatePsamCardNoResponse_); }
	virtual	int generatePsamCardNo(const char *endpoint, const char *soap_action, ns1__generatePsamCardNo *ns1__generatePsamCardNo_, ns1__generatePsamCardNoResponse *ns1__generatePsamCardNoResponse_);

	/// Web service operation 'storePsamCard' (returns error code or SOAP_OK)
	virtual	int storePsamCard(ns1__storePsamCard *ns1__storePsamCard_, ns1__storePsamCardResponse *ns1__storePsamCardResponse_) { return this->storePsamCard(NULL, NULL, ns1__storePsamCard_, ns1__storePsamCardResponse_); }
	virtual	int storePsamCard(const char *endpoint, const char *soap_action, ns1__storePsamCard *ns1__storePsamCard_, ns1__storePsamCardResponse *ns1__storePsamCardResponse_);

	/// Web service operation 'generatePassword' (returns error code or SOAP_OK)
	virtual	int generatePassword(ns1__generatePassword *ns1__generatePassword_, ns1__generatePasswordResponse *ns1__generatePasswordResponse_) { return this->generatePassword(NULL, NULL, ns1__generatePassword_, ns1__generatePasswordResponse_); }
	virtual	int generatePassword(const char *endpoint, const char *soap_action, ns1__generatePassword *ns1__generatePassword_, ns1__generatePasswordResponse *ns1__generatePasswordResponse_);

	/// Web service operation 'storeCard' (returns error code or SOAP_OK)
	virtual	int storeCard(ns1__storeCard *ns1__storeCard_, ns1__storeCardResponse *ns1__storeCardResponse_) { return this->storeCard(NULL, NULL, ns1__storeCard_, ns1__storeCardResponse_); }
	virtual	int storeCard(const char *endpoint, const char *soap_action, ns1__storeCard *ns1__storeCard_, ns1__storeCardResponse *ns1__storeCardResponse_);

	/// Web service operation 'getCardTypeRules' (returns error code or SOAP_OK)
	virtual	int getCardTypeRules(ns1__getCardTypeRules *ns1__getCardTypeRules_, ns1__getCardTypeRulesResponse *ns1__getCardTypeRulesResponse_) { return this->getCardTypeRules(NULL, NULL, ns1__getCardTypeRules_, ns1__getCardTypeRulesResponse_); }
	virtual	int getCardTypeRules(const char *endpoint, const char *soap_action, ns1__getCardTypeRules *ns1__getCardTypeRules_, ns1__getCardTypeRulesResponse *ns1__getCardTypeRulesResponse_);

	/// Web service operation 'getMainKey' (returns error code or SOAP_OK)
	virtual	int getMainKey(ns1__getMainKey *ns1__getMainKey_, ns1__getMainKeyResponse *ns1__getMainKeyResponse_) { return this->getMainKey(NULL, NULL, ns1__getMainKey_, ns1__getMainKeyResponse_); }
	virtual	int getMainKey(const char *endpoint, const char *soap_action, ns1__getMainKey *ns1__getMainKey_, ns1__getMainKeyResponse *ns1__getMainKeyResponse_);
};
#endif
